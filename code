/*variable declaration*/
int clkSec =0;
int clkMin =0;
int clkHour =0;

int alarmMin=0;
int alarmHour=0;

int displayA=0;
int displayB=0;

bool state=0;
bool isAlarmOn=0; //apakah fitur alarm on
bool isAlarmActive=0; //apakah alarm menyala

/*function declaration*/
addClkSec();
addClkMin();
addClkHour();

addAlarmMin();
addAlarmHour();

displayTime(int displayA, int displayB);



void setup()
{
  // initialize timer1 
  noInterrupts();           // disable all interrupts
  TCCR1A = 0;
  TCCR1B = 0;
  TCNT1  = 0;

  OCR1A = 62500;            // compare match register 16MHz/256/1Hz
  TCCR1B |= (1 << WGM12);   // CTC mode
  TCCR1B |= (1 << CS12);    // 256 prescaler 
  TIMSK1 |= (1 << OCIE1A);  // enable timer compare interrupt
  interrupts();             // enable all interrupts
}

ISR(TIMER1_COMPA_vect)          // timer compare interrupt service routine
{
  addClockSec();
}

void loop() {
  //state 0 : clock
  if(state==0) { //state clock
    if(digitalRead(C)==HIGH) {addClkHour();}
    if(digitalRead(D)=HIGH){addClkMin();}
    if(digitalRead(B)==LOW) {
      displayA=clkHour;
      displayB=clkMin;
    }
    else {
      displayA=clkMin;
      displayB=clkSec;
    }
  }

  //state 1 : alarm
  if(state==1) {
    if(digitalRead(C)==HIGH) {addAlarmHour();}
    if(digitalRead(D)=HIGH){addAlarmMin();}
    displayA=alarmHour;
    displayB=alarmMin;
  }

  //ALARM MENYALA
  if(clkHour==alarmHour && clkMin==alarmMin) {
    isAlarmActive=1;
    
  }
  
}

void addClkSec() {
  clkSec++;
  if(clkSec ==60) {
    clkSec=0;
    addClkMin()
  }
}


